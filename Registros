using System.Threading.Tasks;
using Microsoft.AspNetCore.Mvc;
using Microsoft.Azure.WebJobs;
using Microsoft.Azure.WebJobs.Extensions.Http;
using Microsoft.AspNetCore.Http;
using Microsoft.Extensions.Logging;
using Microsoft.Azure.Cosmos;
using System.Collections.Generic;
using System.Linq;

public static class ListarRegistros
{
    private static readonly string EndpointUri = Environment.GetEnvironmentVariable("CosmosDBEndpointUri");
    private static readonly string PrimaryKey = Environment.GetEnvironmentVariable("CosmosDBPrimaryKey");
    private static readonly CosmosClient cosmosClient = new CosmosClient(EndpointUri, PrimaryKey);
    private static readonly Container container = cosmosClient.GetContainer("meu-database", "meu-container");

    [FunctionName("ListarRegistros")]
    public static async Task<IActionResult> Run(
        [HttpTrigger(AuthorizationLevel.Function, "get", Route = null)] HttpRequest req,
        ILogger log)
    {
        var query = "SELECT * FROM c";
        var iterator = container.GetItemQueryIterator<dynamic>(query);
        var resultados = new List<dynamic>();

        while (iterator.HasMoreResults)
        {
            var response = await iterator.ReadNextAsync();
            resultados.AddRange(response.ToList());
        }

        return new OkObjectResult(resultados);
    }
}
